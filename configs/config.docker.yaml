
# adminsrv configuration
server:
  mode: debug  # server mode: release, debug, test，默认 release
  healthz: true # 是否开启健康检查，如果开启会安装 /healthz 路由，默认 true
  middlewares:  # 指定需要配置的中间件
  use-multipoint: true # 是否使用多点登录拦截
  iplimit-count: 15000 # IP限制次数 一个小时15000次
  iplimit-time: 3600 #  IP限制一个小时
  max-ping-count: 3 # http 服务启动后，自检尝试次数，默认 3
  oss-type: local # 控制oss选择走本地还是 七牛等其他仓 自行增加其他oss仓可以在 server/utils/upload/upload.go 中 NewOss函数配置
  router-prefix: admin

# GRPC 服务配置
grpc:
  bind-address: 0.0.0.0 # grpc 安全模式的 IP 地址，默认 0.0.0.0
  bind-port: 9001 # grpc 安全模式端口号，默认 9001
  max-msg-size:


# http 配置
insecure:
  bind-address: 0.0.0.0
  bind-port: 9002

# https 配置
secure:
  bind-address: 0.0.0.0
  bind-port: 9003
  tls:
    cert-key:
      cert-file:  # 包含 x509 证书的文件路径，用 HTTPS 认证
      private-key-file: # TLS 私钥

gateway:
  bind-address: 0.0.0.0
  bind-port: 9090


# JWT 配置
jwt:
  realm: JWT # jwt 标识
  key: dfVpOK8LZeJLZHYmHdb1VdyRrACKpqoo # 服务端密钥
  timeout: 24h # token 过期时间(小时)
  max-refresh: 1h # token 更新时间(小时)

# zap logger configuration
log:
  name: apiserver # Logger的名字
  development: true # 是否是开发模式。如果是开发模式，会对DPanicLevel进行堆栈跟踪。
  level: debug # 日志级别，优先级从低到高依次为：debug, info, warn, errors, dpanic, panic, fatal。
  format: console # 支持的日志输出格式，目前支持console和json两种。console其实就是text格式。生产环境建议使用 json
  enable-color: true # 是否开启颜色输出，true:是，false:否
  disable-caller: false # 是否开启 caller，如果开启会在日志中显示调用日志所在的文件、函数和行号
  disable-stacktrace: false # 是否再panic及以上级别禁止打印堆栈信息
  output-paths: _output/log/adminsrv-adminsrv-server.log,stdout # 支持输出到多个输出，逗号分开。支持输出到标准输出（stdout）和文件。
  error-output-paths: _output/log/adminsrv-adminsrv-server.errors.log # zap内部(非业务)错误日志输出路径，多个输出，逗号分开
# Redis 配置
redis:
  addr: voyage-redis-1:6379 # single 地址，默认 127.0.0.1:6379
  password: 123456  # single 密码
  db:
  read-timeout: 2s
  write-timeout: 0.3s
  dial-timeout: 0.3s

# mysql connect configuration
# 未初始化之前请勿手动修改数据库信息！！！如果一定要手动初始化请看（https://gin-vue-admin.com/docs/first_master）
mysql:
  host: voyage-mysql-1:3306 # MySQL 机器 ip 和端口，默认 127.0.0.1:3306
  username: root # MySQL 用户名(建议授权最小权限集)
  password: 123456 # MySQL 用户密码
  database: voyage # adminsrv 系统所用的数据库名
  max-idle-connections: 100 # MySQL 最大空闲连接数，默认 100
  max-open-connections: 100 # MySQL 最大打开的连接数，默认 100
  max-connection-life-time: 10s # 空闲连接最大存活时间，默认 10s
  log-level: 4 # GORM log level, 1: silent, 2:errors, 3:warn, 4:info

feature:
  enable-metrics: true # 开启 metrics, router:  /metrics
  profiling: true # 开启性能分析, 可以通过 <host>:<port>/debug/pprof/地址查看程序栈、线程等系统信息，默认值为 true

# email configuration
email:
  to: xxx@qq.com
  port: 465
  from: xxx@163.com
  host: smtp.163.com
  is-ssl: true
  secret: xxx
  nickname: test

# captcha configuration
captcha:
  key-long: 6     # 验证码长度
  img-width: 240  # 图形宽度
  img-height: 80  # 图形高
  open-captcha: 0 # 0代表一直开启，大于0代表出现错该误次数后才开启验证功能
  open-captcha-timeout: 3600 # 缓存超时时间 open-captcha大于0时才生效

# local configuration
local:
  path: uploads/file
  store-path: uploads/file


# qiniu configuration (请自行七牛申请对应的 公钥 私钥 bucket 和 域名地址)
qiniu:
  zone: ZoneHuaDong
  bucket: ""
  img-path: ""
  use-https: false
  access-key: ""
  secret-key: ""
  use-cdn-domains: false

# aliyun oss configuration
aliyun-oss:
  endpoint: yourEndpoint
  access-key-id: yourAccessKeyId
  access-key-secret: yourAccessKeySecret
  bucket-name: yourBucketName
  bucket-url: yourBucketUrl
  base-path: yourBasePath

# aws s3 configuration (minio compatible)
aws-s3:
  bucket: xxxxx-10005608
  region: ap-shanghai
  endpoint: ""
  s3-force-path-style: false
  disable-ssl: false
  secret-id: your-secret-id
  secret-key: your-secret-key
  base-url: https://gin.vue.admin
  path-prefix: github.com/flipped-aurora/gin-vue-adminsrv-adminsrv-server/server

# excel configuration
excel:
  dir: ./resource/excel/


# 跨域配置
# 需要配合 server/initialize/router.go -> `Router.Use(middleware.CorsByRules())` 使用
cors:
  mode: strict-whitelist # 放行模式: allow-all, 放行全部; whitelist, 白名单模式, 来自白名单内域名的请求添加 cors 头; strict-whitelist 严格白名单模式, 白名单外的请求一律拒绝
  whitelist:
    - allow-origin: example1.com
      allow-headers: Content-Type,AccessToken,X-CSRF-Token, Authorization, Token,X-Token,X-User-Id
      allow-methods: POST, GET
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type

      allow-credentials: true # 布尔值
    - allow-origin: example2.com
      allow-headers: content-type
      allow-methods: GET, POST
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type
      allow-credentials: true # 布尔值

# added by mohamed hassan to support multi language
language:
  language: en
  dir: ./resource/lang/